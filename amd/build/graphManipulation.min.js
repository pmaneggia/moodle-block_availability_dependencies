define("block_availdep/graphManipulation",["exports"],(function(_exports){function computePredecessors(node){return node.depend.c.filter((function(x){return"completion"===x.type}))}function handleDanglingReferencesInNode(depend,ids){if(depend.op){var danglingReferenceFound=!1;return depend.c.forEach((function(d){var found=handleDanglingReferencesInNode(d,ids);danglingReferenceFound||(danglingReferenceFound=found)})),danglingReferenceFound}return"completion"===depend.type&&!ids.includes(depend.cm)&&(depend.cm=-2,!0)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.fixDanglingReferences=function(dependencies,missingString){var ids=dependencies.map((function(x){return x.id})).concat([-1]),danglingReferenceFound=!1;dependencies.forEach((function(node){if(node.depend){var found=handleDanglingReferencesInNode(node.depend,ids);danglingReferenceFound||(danglingReferenceFound=found)}})),danglingReferenceFound&&dependencies.push({id:-2,name:missingString,depend:null,predecessor:null})},_exports.removeDisconnectedNodes=
/**
   * Module for functions that manipulate the graph.
   *
   * @copyright  2022 Paola Maneggia
   * @author     Paola Maneggia <paola.maneggia@gmail.com>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   * @module     block/availdep
   */
function(dependencies){var notIsolatedNodes=function(dependencies){var notIsolatedNodes=new Set;return dependencies.forEach((function(node){(function(node){return node.depend&&computePredecessors(node).length>0})(node)&&(notIsolatedNodes.add(node.id),function(node,notIsolatedNodes){computePredecessors(node).forEach((function(x){return notIsolatedNodes.add(-1===x.cm?x.predecessor:x.cm)}))}(node,notIsolatedNodes))})),notIsolatedNodes}(dependencies);return dependencies.filter((function(n){return notIsolatedNodes.has(n.id)}))}}));

//# sourceMappingURL=graphManipulation.min.js.map
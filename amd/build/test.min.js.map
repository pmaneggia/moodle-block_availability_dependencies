{"version":3,"sources":["../src/test.js"],"names":["init","content","simulation","generateSimulation","display","on","tick","dependencies","d3","forceSimulation","nodes","force","forceManyBody","forceLink","edges","id","d","forceCenter","Object","keys","map","x","data","entries","filter","key","value","flatMap","c","target","source","cm","displayNodes","displayEdges","links","select","selectAll","enter","append","attr","n","y","e"],"mappings":"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","sourcesContent":["export const init = (content) => {\n    let simulation = generateSimulation(content);\n    display(simulation);\n    simulation.on('tick', tick);\n};\n\nfunction generateSimulation(dependencies) {\n    return d3.forceSimulation(nodes(dependencies))\n        .force('charge', d3.forceManyBody())\n        .force('link', d3.forceLink(edges(dependencies)).id(d => d.id))\n        .force('center', d3.forceCenter());\n}\n\n// Compute the nodes for d3-force as an array of objects {id: cm_id}\nfunction nodes(dependencies) {\n    return Object.keys(dependencies).map(x => {return {id: x}});\n}\n\n// Compute the edges (links) for d3-force.\nfunction edges(data) {\n    return Object.entries(data).filter(([key, value]) => value !== null)\n        .flatMap(([key, value]) => {return value.c.map(x => {return {target: key, source: x.cm + ''}})});\n}\n\nfunction display(simulation) {\n    displayNodes(simulation.nodes());\n    displayEdges(simulation.force('link').links());\n}\n\nfunction displayNodes(nodes) {\n    d3.select('svg').selectAll('circle').data(nodes)\n        .enter().append('circle')\n        .attr('r', 5)\n        .attr('cx', n => n.x * 5 + 100)\n        .attr('cy', n => n.y * 5 + 100);\n}\n\nfunction displayEdges(edges) {\n    d3.select('svg').selectAll('line').data(edges)\n        .enter().append('line')\n        .attr('stroke', 'black')\n        .attr('x1', e => e.source.x * 5 + 100)\n        .attr('y1', e => e.source.y * 5 + 100)\n        .attr('x2', e => e.target.x * 5 + 100)\n        .attr('y2', e => e.target.y * 5 + 100);   \n}\n\nfunction tick() {\n    d3.select('svg').selectAll('circle')\n        .attr('r', 5)\n        .attr('cx', n => n.x * 5 + 100)\n        .attr('cy', n => n.y * 5 + 100);\n    d3.select('svg').selectAll('line')\n        .attr('stroke', 'black')\n        .attr('x1', e => e.source.x * 5 + 100)\n        .attr('y1', e => e.source.y * 5 + 100)\n        .attr('x2', e => e.target.x * 5 + 100)\n        .attr('y2', e => e.target.y * 5 + 100);      \n}\n\n\n\n"],"file":"test.min.js"}
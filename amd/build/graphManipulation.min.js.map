{"version":3,"file":"graphManipulation.min.js","sources":["../src/graphManipulation.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module for functions that manipulate the graph.\n *\n * @copyright  2022 Paola Maneggia\n * @author     Paola Maneggia <paola.maneggia@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @module     block/availdep\n */\n\n/**\n * Given a list of dependencies, remove the isolated nodes\n * and return the remaining list.\n *\n * @param {{id, name, depend, predecessor}[]} dependencies\n * @returns {{id, name, depend, predecessor}[]}\n */\nexport function removeDisconnectedNodes(dependencies) {\n    let notIsolatedNodes = computeNotIsolatedNodes(dependencies);\n    return dependencies.filter(n => notIsolatedNodes.has(n.id));\n}\n\n/* eslint-disable jsdoc/require-jsdoc */\n/* eslint-disable require-jsdoc */\n\nfunction computeNotIsolatedNodes(dependencies) {\n    let notIsolatedNodes = new Set();\n    dependencies.forEach(node => {\n        if (hasPredecessor(node)) {\n            notIsolatedNodes.add(node.id);\n            addAllPredecessors(node, notIsolatedNodes);\n        }\n    });\n    return notIsolatedNodes;\n}\n\nfunction hasPredecessor(node) {\n    return node.depend && computePredecessors(node).length > 0;\n}\n\nfunction computePredecessors(node) {\n    return node.depend.c.filter(x => x.type === 'completion');\n}\n\nfunction addAllPredecessors(node, notIsolatedNodes) {\n    computePredecessors(node).forEach(x => notIsolatedNodes.add(x.cm === -1 ? x.predecessor : x.cm));\n}\n\n/* eslint-enable jsdoc/require-jsdoc */\n/* eslint-enable require-jsdoc */\n"],"names":["computePredecessors","node","depend","c","filter","x","type","dependencies","notIsolatedNodes","Set","forEach","length","hasPredecessor","add","id","cm","predecessor","addAllPredecessors","computeNotIsolatedNodes","n","has"],"mappings":"mFAsDSA,oBAAoBC,aAClBA,KAAKC,OAAOC,EAAEC,QAAO,SAAAC,SAAgB,eAAXA,EAAEC;;;;;;;;;SAxBCC,kBAChCC,0BAOyBD,kBACzBC,iBAAmB,IAAIC,WAC3BF,aAAaG,SAAQ,SAAAT,gBASDA,aACbA,KAAKC,QAAUF,oBAAoBC,MAAMU,OAAS,GATjDC,CAAeX,QACfO,iBAAiBK,IAAIZ,KAAKa,aAeVb,KAAMO,kBAC9BR,oBAAoBC,MAAMS,SAAQ,SAAAL,UAAKG,iBAAiBK,KAAc,IAAVR,EAAEU,GAAYV,EAAEW,YAAcX,EAAEU,OAfpFE,CAAmBhB,KAAMO,sBAG1BA,iBAfgBU,CAAwBX,qBACxCA,aAAaH,QAAO,SAAAe,UAAKX,iBAAiBY,IAAID,EAAEL"}
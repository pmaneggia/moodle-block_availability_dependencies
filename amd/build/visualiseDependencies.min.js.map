{"version":3,"sources":["../src/visualiseDependencies.js"],"names":["init","courseid","full","promises","Ajax","call","methodname","args","fail","ex","console","log","then","dependencies","dimensions","determineSvgSize","setupSvg","forEach","d","depend","JSON","parse","simulation","generateSimplifiedSimulation","displaySimplifiedGraph","generateFullSimulation","displayFullGraph","rememberD3Selections","on","tick","makeDraggable","textColour","arrowColour","fullNodeRadius","operatorRadius","svgWidth","d3","select","attr","width","height","addMarker","dev","append","svg","document","querySelector","parentNode","clientWidth","forceSimulation","force","forceX","forceY","forceCollide","radius","forceManyBody","strength","forceLink","computeEdgesSimplifiedDependencies","distance","id","computeEdgesAndNodesFullDependencies","edges","nodes","n","isSource","isTarget","genus","leaves","c","flatMap","op","type","cm","filter","name","predecessor","map","target","source","flat","onlyNonCompletionConditionsIn","dependList","length","uid","getNextUID","extractEdgesAndNodes","toGenus","el","newNode","push","newEdge","find","a","displaySimplifiedEdges","links","displaySimplifiedNodesAndLabels","displayFullEdges","displayFullNodesAndLabels","s_edges","selectAll","data","enter","e","s_nodes","join","clone","lower","labels","x","y","text","drag","event","active","alphaTarget","restart","fx","fy"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Visualise dependencies.\n *\n * @copyright  2022 Paola Maneggia, Mathias Kegelmann\n * @author     Paola Maneggia <paola.maneggia@gmail.com>, Mathias Kegelmann <mathias.kegelmann@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @module     block/availability_dependencies\n */\n\nimport Ajax from 'core/ajax';\n\nconst full = 'no';\n\nexport const init = (courseid, full) => {\n    full = full;\n    var promises = Ajax.call([{\n        methodname: 'block_availability_dependencies_fetch_course_modules_with_names_and_dependencies',\n        args: {courseid: courseid}\n    }\n]);\n\npromises[0].fail(ex => console.log(ex))\n    .then(dependencies => {\n        let dimensions = determineSvgSize();\n        setupSvg(dimensions);\n        dependencies.forEach(d => {d.depend = JSON.parse(d.depend)});\n        let simulation;\n        if (full === 'no') {\n            simulation = generateSimplifiedSimulation(dependencies, dimensions);\n            displaySimplifiedGraph(simulation);\n        } else {\n            simulation = generateFullSimulation(dependencies);\n            displayFullGraph(simulation);\n        }\n        rememberD3Selections();\n        simulation.on('tick', tick);\n        makeDraggable(simulation);\n    });\n};\n\nlet nodeColour = '#9BD1E5';\nlet textColour = '#364958';\nlet arrowColour = '#516E84';\nlet andColour = '#FFB400';\nlet orColour = '#CEFF1A';\nlet otherOperatorColour = '#D1FAFF';\n\nlet fullNodeRadius = 50;\nlet operatorRadius = 20;\n\nlet svgWidth;\nlet svgHeight;\n\n/**\n * Make the svg as wide as the parent, height is width * 0.6, center viewBox.\n */\nfunction setupSvg(dimensions) {\n    d3.select('svg.availability_dependencies')\n        .attr('width', dimensions.width)\n        .attr('height', dimensions.height)\n        .attr('viewBox', -dimensions.width/2 + ' ' + -dimensions.height/2\n            + ' ' + dimensions.width + ' ' + dimensions.height);\n    addMarker();\n}\n\nfunction addMarker() {\n    let dev = d3.select('svg.availability_dependencies').append('defs');\n    dev.append('marker')\n      .attr('id', 'arrow')\n      .attr('viewBox', \"0 0 10 10\")\n      .attr('refX', 15)\n      .attr('refY', 5)\n      .attr('markerUnits', 'strokeWidth')\n      .attr('markerWidth', 6)\n      .attr('markerHeight', 8)\n      .attr('orient', 'auto')\n    .append('path')\n      .attr('fill', arrowColour)\n      .attr('d', 'M 0 0 L 10 5 L 0 10 z');\n    \n    dev.append('marker')\n      .attr('id', 'arrowToActivity')\n      .attr('viewBox', \"0 0 10 10\")\n      .attr('refX', 30)\n      .attr('refY', 5)\n      .attr('markerUnits', 'strokeWidth')\n      .attr('markerWidth', 6)\n      .attr('markerHeight', 8)\n      .attr('orient', 'auto')\n    .append('path')\n      .attr('fill', arrowColour)\n      .attr('d', 'M 0 0 L 10 5 L 0 10 z');\n\n    dev.append('marker')\n      .attr('id', 'arrowToOperator')\n      .attr('viewBox', \"0 0 10 10\")\n      .attr('refX', 18)\n      .attr('refY', 5)\n      .attr('markerUnits', 'strokeWidth')\n      .attr('markerWidth', 6)\n      .attr('markerHeight', 8)\n      .attr('orient', 'auto')\n    .append('path')\n      .attr('fill', arrowColour)\n      .attr('d', 'M 0 0 L 10 5 L 0 10 z');\n}\n\nfunction determineSvgSize() {\n    let svg = document.querySelector('svg.availability_dependencies');\n    let width = svg.parentNode.clientWidth;\n    let height = width * 0.6;\n    svgWidth = width;\n    svgHeight = height;\n    return {width, height};\n}\n\n/**\n * Generate a simulation, using the nodes and edges (links)\n * extracted from the dependencies between course modules.\n * The nodes are indexed by the course module id.\n * @param {json} dependencies\n * @returns d3 simulation object\n */\nfunction generateSimplifiedSimulation(dependencies, dimensions) {\n    return d3.forceSimulation(dependencies)\n        .force('x0', d3.forceX())\n        .force('y0', d3.forceY())\n        .force('collide', d3.forceCollide().radius(20))\n        .force('charge', d3.forceManyBody().strength(-300))\n        .force('link', d3.forceLink(computeEdgesSimplifiedDependencies(dependencies)).distance(200).id(d => d.id));\n}\n\n/**\n * Generate a simulation, using the nodes and edges (links)\n * extracted from the dependencies between course modules.\n * The activity nodes are indexed by the course module id,\n * the operator nodes are indexed by a generated unique id.\n * @param dependencies Array of objects with fields {id, name, depend, predecessor}\n * @returns d3 simulation object\n */\nfunction generateFullSimulation(dependencies) {\n    let {edges, nodes} = computeEdgesAndNodesFullDependencies(dependencies);\n    return d3.forceSimulation(nodes)\n        .force('x0', d3.forceX())\n        .force('y0', d3.forceY())\n        .force('isSource', d3.forceX(-svgWidth/3).strength(n => n.isSource))\n        .force('isTarget', d3.forceX(svgWidth/3).strength(n => n.isTarget))\n        .force('collide', d3.forceCollide(100).radius(n => (n.genus === 'activity' ? fullNodeRadius : operatorRadius) + 30))\n        .force('charge', d3.forceManyBody().strength(-300))\n        .force('link', d3.forceLink(edges).distance(50).id(d => d.id));\n}\n\n/**\n * For a simplified representation, flatten any nesting.\n * @param {} dependencies \n */\nfunction computeEdgesSimplifiedDependencies(dependencies) {\n    // for an array of nested dependencies\n    // extract all the cm.id of leaves of type 'completion'\n    let leaves = (depend =>\n        depend.c.flatMap(d => d.op ? leaves(d) : (d.type === 'completion' ? d.cm : [])));\n    return dependencies\n        .filter(({id, name, depend, predecessor}) => (depend !== null))\n        .map(({id, name, depend, predecessor}) => \n            leaves(depend).map(cm => {return {\n                target: id,\n                source: cm === -1 ? predecessor : cm,\n                name: name\n            }}))\n        .flat();\n}\n\n/**\n * For a full representation we need nodes for the operators besides the nodes\n * representing the activities. For each node we use fields id, name, genus (activity or operator),\n * isSource and isTarget (the last two are for the layout - sort of extenden fuzzy logic,\n * they are a quantity instead of a boolean).\n * An activity node has as id its course module id and as name its name.\n * An operator node has as id the a uniquely generated id.\n * \n * For each completion of an activity there is a flag 'e' which\n * can have value 0, 1, 2 or 3 (meaning: activity (0) should not be completed; (1) must be completed;\n * (2) must be completed an passed; (3) must be completed and failed).\n * TODO Add a node with that flag between the activity and the previous node.\n * @param {} dependencies \n */\n function computeEdgesAndNodesFullDependencies(dependencies) {\n\n    function onlyNonCompletionConditionsIn(dependList) {\n        return dependList.filter(c => (c.type && c.type == 'completion' || (!c.type && c.op))).length === 0;\n    }\n    \n    let uid = 0;\n\n    function getNextUID() {\n        return 'uid_' + uid++;\n    }\n\n    function extractActivityNodes(dependencies) {\n        return dependencies.map(d => {\n            return {\n                id: d.id,\n                name: d.name,\n                genus: 'activity',\n                isSource: 0,\n                isTarget: 0\n            }\n        });\n    }\n\n    let edges = [];\n    let nodes = extractActivityNodes(dependencies);\n\n    // id is the id field of the target node, of genus 'operator' after the first call.\n    // toGenus: genus of the target node ('activity' or 'operator')\n    // dependList the list of dependencies that have the node with id id as target\n    // predecessor is the cmid of the activity node for which we are extracting the information,\n    // to be used if in the nesting of dependencies there will be one with {type: 'completion', cm:-1}\n    // An edge has the same genus as its target.\n    function extractEdgesAndNodes(id, toGenus, dependList, predecessor) {\n        dependList.forEach(el => {\n            if (!el.type && el.op && !onlyNonCompletionConditionsIn(el.c)) {\n                // generate node\n                let newNode = {\n                    id: getNextUID(),\n                    name: el.op,\n                    genus: 'operator',\n                    isTarget: 0.1,\n                    isSource: 0.1\n                };\n                nodes.push(newNode);\n                // generate edge\n                let newEdge = {\n                    target: id,\n                    source: newNode.id,\n                    toGenus: toGenus\n                };\n                edges.push(newEdge);\n                //recursive call\n                extractEdgesAndNodes(newNode.id, 'operator', el.c, predecessor);\n            } else if (el.type === 'completion') {\n                // generate edge\n                let newEdge = {\n                    target: id,\n                    source: el.cm === -1 ? predecessor : el.cm,\n                    toGenus: toGenus\n                };\n                // increase isSource of the source node\n                nodes.find(n => n.id === newEdge.source).isSource += 0.2;\n                edges.push(newEdge);\n            } else {\n                // make edge to node of other dependencies\n            }\n        })\n    }\n\n    dependencies.forEach(a => {\n        if(a.depend !== null) {\n            // If an activity has some availability conditions, set the value for isTarget in its node.\n            // For the moment I am not checking if the conditions are of the wrong type\n            nodes.find(n => n.id === a.id).isTarget = 0.9;\n            extractEdgesAndNodes(a.id, 'activity', [a.depend], a.predecessor)\n        }\n    });\n\n    return {edges, nodes};\n}\n\n/**\n * Use d3 to display nodes and edges (links).\n * @param simulation\n */\n function displaySimplifiedGraph(simulation) {\n    displaySimplifiedEdges(simulation.force('link').links());\n    displaySimplifiedNodesAndLabels(simulation.nodes());\n}\n\n/**\n * Use d3 to display nodes and edges (links).\n * @param simulation\n */\n function displayFullGraph(simulation) {\n    displayFullEdges(simulation.force('link').links());\n    displayFullNodesAndLabels(simulation.nodes());\n}\n\n/**\n * Add the graphical elements to display the edges.\n * @param s_edges Edges (links) in the d3 simulation.\n */\n function displaySimplifiedEdges(s_edges) {\n    d3.select('svg').append('g').selectAll('line').data(s_edges)\n        .enter().append('line')\n        .attr('stroke', arrowColour)\n        .attr('stroke-width', '3px')\n        .attr(\"stroke-linecap\", \"round\")\n        .attr('marker-end', 'url(#arrow)');\n}\n\n/**\n * Add the graphical elements to display the edges.\n * @param s_edges Edges (links) in the d3 simulation.\n */\n function displayFullEdges(s_edges) {\n    d3.select('svg').append('g').selectAll('line').data(s_edges)\n        .enter().append('line')\n        .attr('stroke', textColour)\n        .attr('stroke-opacity', 0.7)\n        .attr('stroke-width', '4px')\n        .attr(\"stroke-linecap\", \"round\")\n        .attr('marker-end', e => e.toGenus === 'activity' ?\n            'url(#arrowToActivity' :\n            'url(#arrowToOperator');\n}\n\n/**\n * Add the graphical elements to display the nodes and labels.\n * @param s_nodes Nodes in the d3 simulation.\n */\n function displaySimplifiedNodesAndLabels(s_nodes) {\n    d3.select('svg').append('g').selectAll('circle').data(s_nodes)\n        .join('circle')\n        .attr('fill', nodeColour)\n        .attr('stroke', 'white')\n        .attr('r', 10);\n    d3.select('svg').append('g').selectAll('text').data(s_nodes)\n        .join('text')\n        .attr('fill', textColour)\n        .attr('font-family', 'sans-serif')\n        .attr('font-weight', 'bold')\n      .clone().lower()\n        .attr('stroke', 'white')\n        .attr('stroke-width', 4)\n        .attr('stroke-opacity', 0.5);\n}\n\n/**\n * Add the graphical elements to display the nodes and labels.\n * @param s_nodes Nodes in the d3 simulation.\n */\n function displayFullNodesAndLabels(s_nodes) {\n    d3.select('svg').append('g').selectAll('circle').data(s_nodes)\n        .join('circle')\n        .attr('fill', n => n.genus === 'activity' ? nodeColour : n.name === '&' ? andColour : n.name === '|' ? orColour : otherOperatorColour)\n        .attr('stroke', 'white')\n        .attr('stroke-width', 3)\n        .attr('r', n => n.genus === 'activity' ? fullNodeRadius : operatorRadius);\n    d3.select('svg').append('g').selectAll('text').data(s_nodes)\n        .join('text')\n        .attr('fill', textColour)\n        .attr('font-family', 'sans-serif')\n        .attr('font-weight', 'bold')\n        .attr('text-anchor', 'middle')\n        .attr('dx', -5)\n        .attr('dominant-baseline', 'middle')\n        .attr('dy', 5);\n}\n\nlet edges, nodes, labels;\n\n/**\n * Save the graphical representation of edges, nodes and labals.\n */\nfunction rememberD3Selections() {\n    edges = d3.select('svg').selectAll('line');\n    nodes = d3.select('svg').selectAll('circle');\n    labels = d3.select('svg').selectAll('text');\n}\n\n/**\n * Update the simulation.\n */\nfunction tick() {\n    nodes\n        .attr('cx', n => n.x)\n        .attr('cy', n => n.y);\n    edges\n        .attr('x1', e => e.source.x)\n        .attr('y1', e => e.source.y)\n        .attr('x2', e => e.target.x)\n        .attr('y2', e => e.target.y);\n    labels\n        .attr('x', n => n.x + 5)\n        .attr('y', n => n.y - 5)\n        .text(n => n.name);\n\n}\n\n/**\n * Make nodes draggable.\n * Once dragged a node is fixed to its assigned position in the simulation.\n * @param simulation\n */\nfunction makeDraggable(simulation) {\n    nodes\n        .call(d3.drag()\n        .on('start', (event, n) => {\n            if (!event.active) simulation.alphaTarget(0.3).restart();\n            n.fx = event.x;\n            n.fy = event.y;\n        })\n        .on('drag',\n            (event, n) => {\n                n.fx = event.x;\n                n.fy = event.y;\n            })\n        .on('end', (event) => {if (!event.active) simulation.alphaTarget(0);})\n        );\n}\n\n"],"file":"visualiseDependencies.min.js"}